name: Deploy

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/josh/yapster
            git pull origin master
            docker build -t yapster .
            docker compose down
            docker compose up -d

  create_release:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get previous tag
        id: previoustag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
          
      - name: Generate release notes
        id: release_notes
        run: |
          NEW_TAG="v${{ github.run_number }}"
          PREVIOUS_TAG="${{ steps.previoustag.outputs.tag }}"
          
          if [ -z "$PREVIOUS_TAG" ]; then
            # If no previous tag exists
            echo "RELEASE_BODY=Initial release" >> $GITHUB_ENV
          else
            # Generate comparison URL and get commit messages
            COMPARE_URL="https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...$NEW_TAG"
            COMMITS=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD)
            {
              echo 'RELEASE_BODY<<EOF'
              echo "## What's Changed"
              echo "$COMMITS"
              echo
              echo "**Full Changelog**: $COMPARE_URL"
              echo 'EOF'
            } >> $GITHUB_ENV
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
